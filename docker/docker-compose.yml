version: '3.7'

services:
  reverse-proxy:
    image: traefik:2.1.4
    command:
      - "--providers.docker"
      - "--entrypoints.http.address=:${EXTERNAL_PORT}"
    restart: unless-stopped
    labels:
      - "traefik.enable=false"
    read_only: true
    ports:
      - "${EXTERNAL_PORT}:${EXTERNAL_PORT}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  web:
    build: ./front/
    image: ${DOCKER_USERNAME}/oufti-front
    restart: unless-stopped
    read_only: true
    labels:
      - "traefik.http.routers.web.rule=Host(`${EXTERNAL_DOMAIN}`) && PathPrefix(`/`)"
      - "traefik.http.services.web.LoadBalancer.server.Port=${EXTERNAL_PORT}"
      - "traefik.http.routers.web.service=web"
    extra_hosts:
      - "${EXTERNAL_DOMAIN}:${DOCKER_BRIDGE_IP}"
    environment:
      - EXTERNAL_DOMAIN=${EXTERNAL_DOMAIN}
      - EXTERNAL_PORT=${EXTERNAL_PORT}

  jenkins:
    build: ./jenkins/
    image: ${DOCKER_USERNAME}/oufti-jenkins
    secrets:
      - agent_private_key
    read_only: true
    restart: unless-stopped
    depends_on:
      - jenkins-production-node
      - jenkins-maven-jdk8-node
      - jenkins-maven-jdknext-node
    labels:
      - "traefik.http.routers.jenkins.rule=Host(`${EXTERNAL_DOMAIN}`) && PathPrefix(`/jenkins`)"
      - "traefik.http.services.jenkins.LoadBalancer.server.Port=8080"
      - "traefik.http.routers.jenkins.service=jenkins"
    volumes:
      - /var/jenkins_home
      - /run
      - /tmp
    environment:
      - JENKINS_ROOT_URL=http://${EXTERNAL_DOMAIN}:${EXTERNAL_PORT}/jenkins
      - JENKINS_OPTS=--prefix=/jenkins
      - JENKINS_ADMIN=butler
      - AGENT_PRIVATE_KEY_FILE=/run/secrets/agent_private_key

  gitserver:
    build: ./gitserver/
    image: ${DOCKER_USERNAME}/oufti-gitserver
    restart: unless-stopped
    depends_on:
      - jenkins
    labels:
      - "traefik.http.routers.gitserver.rule=Host(`${EXTERNAL_DOMAIN}`) && PathPrefix(`/gitserver`)"
      - "traefik.http.middlewares.gitserver-stripprefix.stripprefix.prefixes=/gitserver"
      - "traefik.http.services.gitserver-svc.LoadBalancer.server.Port=3000"
      - "traefik.http.routers.gitserver.service=gitserver-svc"
      - "traefik.http.routers.gitserver.middlewares=gitserver-stripprefix"
    extra_hosts:
      - "${EXTERNAL_DOMAIN}:${DOCKER_BRIDGE_IP}"
    environment:
      - EXTERNAL_URL=http://${EXTERNAL_DOMAIN}:${EXTERNAL_PORT}/gitserver
      - EXTERNAL_DOMAIN=${EXTERNAL_DOMAIN}
      - FIRST_USER=butler
      - LOAD_SSH_KEY_FROM_JENKINS=true # Autoload the BlueOcean SSH Key into Gitea
      - SOURCE_REPO_CONFIG=/tmp/repositories.json
    volumes:
      - /app/data
      - ./gitserver/repositories.json:/tmp/repositories.json:ro
    healthcheck:
      test: ["CMD", "wget", "http://butler:butler@localhost:3000/butler/demoapp","--spider"]
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 10s

  jenkins-production-node:
    build:
      context: ./dind-java-images/
      target: jenkins-maven-jdk8-node
    image: ${DOCKER_USERNAME}/oufti-jenkins-production-node
    restart: unless-stopped
    privileged: true
    labels:
      - "traefik.enable=false"
    extra_hosts:
      - "${EXTERNAL_DOMAIN}:${DOCKER_BRIDGE_IP}"
    environment:
      - JENKINS_SLAVE_SSH_PUBKEY=ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key

  jenkins-maven-jdk8-node:
    build:
      context: ./dind-java-images/
      target: jenkins-maven-jdk8-node
    image: ${DOCKER_USERNAME}/oufti-jenkins-maven-jdk8-node
    restart: unless-stopped
    privileged: true
    labels:
      - "traefik.enable=false"
    extra_hosts:
      - "${EXTERNAL_DOMAIN}:${DOCKER_BRIDGE_IP}"
    environment:
      - JENKINS_SLAVE_SSH_PUBKEY=ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key

  jenkins-maven-jdknext-node:
    build: ./jenkins-maven-jdknext-node/
    image: ${DOCKER_USERNAME}/oufti-jenkins-maven-jdknext-node
    restart: unless-stopped
    read_only: true
    labels:
      - "traefik.enable=false"
    extra_hosts:
      - "${EXTERNAL_DOMAIN}:${DOCKER_BRIDGE_IP}"
    environment:
      - START_DOCKER=no
      - JENKINS_SLAVE_SSH_PUBKEY=ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key

  devbox:
    build:
      context: ./dind-java-images/
      target: devbox
    image: ${DOCKER_USERNAME}/oufti-devbox
    restart: unless-stopped
    labels:
      - "traefik.http.routers.devbox.rule=Host(`${EXTERNAL_DOMAIN}`) && PathPrefix(`/devbox`)"
      - "traefik.http.middlewares.devbox-stripprefix.stripprefix.prefixes=/devbox"
      - "traefik.http.services.devbox.LoadBalancer.server.Port=7681"
      - "traefik.http.routers.devbox.service=devbox"
      - "traefik.http.routers.devbox.middlewares=devbox-stripprefix"
    privileged: true
    extra_hosts:
      - "${EXTERNAL_DOMAIN}:${DOCKER_BRIDGE_IP}"

  docker-service:
    build: ./docker-service/
    image: ${DOCKER_USERNAME}/oufti-docker-service
    restart: unless-stopped
    read_only: true
    labels:
      - "traefik.enable=false"
    command: tcp-listen:2375,reuseaddr,fork unix:/docker.sock
    volumes:
      - /var/run/docker.sock:/docker.sock

secrets:
  agent_private_key:
    file: ./.id_vagrant
